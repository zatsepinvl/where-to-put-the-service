import org.springframework.cloud.contract.verifier.config.TestFramework


plugins {
    id "java"
    //https://youtrack.jetbrains.com/issue/IDEA-151925?_ga=2.75699861.105379761.1613457260-781677120.1613140272#comment=27-2355076
    id "idea"
    id "org.springframework.boot" version "2.5.2"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id "org.springframework.cloud.contract" version "3.0.3"
}

group = "com.effective"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = "16"

sourceSets {
    intTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

idea {
    module {
        testSourceDirs += project.sourceSets.intTest.java.srcDirs
        testSourceDirs += project.sourceSets.intTest.resources.srcDirs
    }
}

repositories {
    mavenCentral()
}

configurations {
    compileOnly.extendsFrom annotationProcessor
    intTestImplementation.extendsFrom implementation
    intTestRuntimeOnly.extendsFrom runtimeOnly
    intTestCompileOnly.extendsFrom compileOnly
    intTestAnnotationProcessor.extendsFrom annotationProcessor
}

def junitVersion = "5.7.0"
def postgresqlVersion = "42.1.4"
def testcontainersVersion = "1.15.2"
def mapstructVersion = "1.4.2.Final"
def cloudContractVersion = "3.0.3"

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.mapstruct:mapstruct:$mapstructVersion"

    annotationProcessor "org.projectlombok:lombok"
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"
    compileOnly "org.projectlombok:lombok"
    compileOnly "org.postgresql:postgresql:$postgresqlVersion"

    // https://mvnrepository.com/artifact/org.postgresql/postgresql
    runtimeOnly "org.postgresql:postgresql:42.1.4"


    developmentOnly "org.springframework.boot:spring-boot-devtools"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-verifier'
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"

    intTestImplementation "org.springframework.boot:spring-boot-starter-test"
    intTestImplementation "org.testcontainers:testcontainers"
    intTestImplementation "org.testcontainers:postgresql"

    contractTestImplementation "org.testcontainers:testcontainers"
    contractTestImplementation "org.testcontainers:postgresql"
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:$testcontainersVersion"
        mavenBom "org.springframework.cloud:spring-cloud-contract-dependencies:$cloudContractVersion"
    }
}

test {
    useJUnitPlatform()
}

task integrationTest(type: Test) {
    description = "Runs integration tests."
    group = "verification"

    testClassesDirs = sourceSets.intTest.output.classesDirs
    classpath = sourceSets.intTest.runtimeClasspath
    shouldRunAfter test
}



integrationTest {
    useJUnitPlatform()
}

check.dependsOn integrationTest

contracts {
    baseClassForTests = "com.effective.ecommerce.yetanother.ContractTestBaseClass"
}

tasks.withType(Test) {
    useJUnitPlatform()
    jvmArgs '--enable-preview'
}